# Enable color support of ls on linux and also add handy aliases
if [[ -x /usr/bin/dircolors ]]; then
  test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
  alias ls='ls --color=auto'
fi

alias ll='ls -alFGh'
alias la='ls -A'
alias l='ls -CF'

alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

_get_main_branch() {
  if [[ -n "$(git ls-remote --heads origin main)" ]]; then
    echo "main"
  elif [[ -n "$(git ls-remote --heads origin master)" ]]; then
    echo "master"
  else
    echo "branches 'master' and 'main' do not exist on origin"
    return 1
  fi
}

gnb () {
  git fetch origin
  _gr_branch="$(_get_main_branch)"
  if [ $? -ne 0 ]; then
    echo $_gr_branch
    unset _gr_branch
    return 1
  fi
  git checkout origin/${_gr_branch} -b $1
}
gr () {
  _gr_branch="$(_get_main_branch)"
  if [ $? -ne 0 ]; then
    echo $_gr_branch
    unset _gr_branch
    return 1
  fi
  git rebase --autosquash origin/${_gr_branch} "$@"
}
alias gf='git fetch origin'

alias help=tldr

get_tmux_buffer () {
  ssh $1 tmux show-buffer -b 0 | pbcopy
}

docker_rm_containers() {
  docker rm -f $(docker ps -aq)
}
docker_rm_all() {
  docker rmi -f $(docker images -q)
}

alias g="source ~/bin/switch_repos"

alias ansible_migrate_staging='ansible-playbook -i /etc/ansible/ecs-staging -vvv --extra-vars "version=git-$(git rev-parse --short HEAD)" ansible/migrate.yml'
alias ansible_migrate_prod='ansible-playbook -i /etc/ansible/ecs-prod -vvv --extra-vars "version=git-$(git rev-parse --short HEAD)" ansible/migrate.yml'

# FZF
#   chrome history
c() {
  local cols sep
  cols=$(( COLUMNS / 3 ))
  sep='{::}'

  cp -f ~/Library/Application\ Support/Google/Chrome/Default/History /tmp/h

  sqlite3 -separator $sep /tmp/h \
    "select substr(title, 1, $cols), url
     from urls order by last_visit_time desc" |
  awk -F $sep '{printf "%-'$cols's  \x1b[36m%s\x1b[m\n", $1, $2}' |
  fzf --ansi --multi | sed 's#.*\(https*://\)#\1#' | xargs open
}

alias minikube-start='minikube start --vm-driver hyperkit  --insecure-registry localhost:5000'
tg() {
  terrafool install
  terragrunt "$@"
}
